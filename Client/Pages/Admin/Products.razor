@page "/admin/products"
@layout AdminLayout

@using Microsoft.AspNetCore.Authorization
@using PhotoPortfolio.Client.Contracts
@using PhotoPortfolio.Shared.Entities

@inject IAdminService adminService
@inject NavigationManager navigationManager

@attribute [Authorize]

<PageTitle>Photo Portfolio : Admin : Products</PageTitle>

@if (errorMessage != "")
{
    <div class="mx-2 animate-pulse">
        <div class="alert-box" role="alert">
            <span class="block sm:inline">@errorMessage</span>
        </div>
    </div>
}
else if (products == null)
{
    <text>Loading products...</text>
}
else
{
    <div class="m-4 md:m-8">
        <div class="text-3xl">Products</div>
        <div class="mt-8 mb-8">
            <LinkButton LinkText="Add New Product" Uri="/admin/products/add" />
        </div>
        <div class="w-full lg:w-1/2">
            @foreach (Product product in products)
            {
                <div class="p-8 mb-4 shadow-lg rounded-md flex flex-row">
                    <div class="w-2/3">
                        <div class="text-lg font-semibold">@product.ProdigiSku</div>
                        <div class="text-base">@product.ProdigiDescription</div>
                    </div>
                    @if (product.ProdigiImageAssetUris.Count > 0)
                    {
                        <div class="w-1/3 flex flex-row justify-items-center">
                            @foreach (var image in product.ProdigiImageAssetUris)
                            {
                                <div>
                                    <img src="@image" class="w-16" />
                                </div>
                            }
                        </div>
                    }
                </div>
            }
        </div>
        
    </div>
}

@code {
    private List<Product> products = null!;
    private string errorMessage = "";

    protected override async Task OnInitializedAsync()
    {
        await GetProducts();
    }

    private async Task GetProducts()
    {
        try
        {
            products = await adminService.GetProductsAsync();
            errorMessage = "";
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            errorMessage = "Could not retrieve list of products";
        }
    }
}
