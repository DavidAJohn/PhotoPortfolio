@page "/admin/products/edit/{Id}"
@layout AdminLayout

@using Microsoft.AspNetCore.Authorization;
@using PhotoPortfolio.Client.Contracts;
@using Microsoft.AspNetCore.Components;
@using MudBlazor;
@using PhotoPortfolio.Client.Components;
@using PhotoPortfolio.Shared.Models;

@inject IAdminService adminService
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@inject IQuoteService quoteService
@inject IProductService productService

@attribute [Authorize]

<PageTitle>Photo Portfolio : Admin : Edit Product</PageTitle>

@if (errorMessage != "")
{
    <div class="mx-2 animate-pulse">
        <div class="alert-box" role="alert">
            <span class="block sm:inline">@errorMessage</span>
        </div>
    </div>
}
else if (product == null)
{
    <text>Loading product...</text>
}
else
{
    <div class="m-4 md:m-8">
        <div class="pb-4">
            <Breadcrumb BreadcrumbCrumbs="@BreadcrumbCrumbs" />
        </div>

        <div class="text-lg lg:text-2xl mb-8">Update Product : @product.ProdigiSku</div>

        <div class="w-full lg:w-1/2">
            <div class="text-base mb-4">Update the product details below:</div>

            <div class="text-base mb-4">
                <EditForm Model="@model" OnValidSubmit="UpdateProduct">
                    <DataAnnotationsValidator />
                    <MudGrid>
                        <MudItem xs="16" sm="9">
                            <MudCard>
                                <MudCardContent>
                                    <MudTextField Label="Sku" @bind-Value="model.ProdigiSku" For="@(() => model.ProdigiSku)" Disabled />
                                    <MudTextField Label="Description" Class="mt-3" @bind-Value="model.ProdigiDescription" For="@(() => model.ProdigiDescription)" Disabled />
                                    <MudTextField Label="Default Markup %" Class="mt-3" @bind-Value="model.DefaultMarkupPercentage" For="@(() => model.DefaultMarkupPercentage)" />
                                    <MudButton OnClick="@(() => GetQuote(model.ProdigiSku))" ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" Class="mr-auto my-4">Get Quote</MudButton>
                                    @if (quoteRequested)
                                    {
                                        <MudSkeleton Class="mt-4" SkeletonType="SkeletonType.Rectangle" Width="200px" Height="33px" />
                                        <MudSkeleton Class="mt-4" SkeletonType="SkeletonType.Rectangle" Width="300px" Height="33px" />
                                    }
                                    else
                                    {
                                        if (wholesalePrice > 0.0m)
                                        {
                                            <MudText Class="mt-4">Wholesale Price: £@wholesalePrice.ToString("0.00")</MudText>
                                            <MudText Class="mt-4">Price To Customer (exc. delivery): £@(((((decimal)model.DefaultMarkupPercentage / 100) + 1) * wholesalePrice).ToString("0.00"))</MudText>
                                        }
                                    }
                                </MudCardContent>
                                <MudCardContent>
                                    @if (model.ProdigiImageAssetUris != null && model.ProdigiImageAssetUris.Count > 0)
                                    {
                                        <div class="flex flex-row justify-items-center">
                                            @foreach (var image in model.ProdigiImageAssetUris)
                                            {
                                                <div class="group relative overflow-hidden hover:cursor-pointer hover:brightness-70" @onclick="@(() => DeleteImage(image))">
                                                    <img src="@image" class="w-24 w-auto object-cover group-hover:brightness-75 transition ease-in-out duration-700 group-hover:scale-105" />
                                                    <div class="absolute invisible group-hover:!visible text-lg text-white top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 ">
                                                        Delete
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                </MudCardContent>
                                <MudCardContent>
                                    <div class="text-base">
                                        <PhotoUpload UploadType=ImageUploadType.Product Product=model ProductUpdate="ImageAssetsAdded" />
                                    </div>
                                </MudCardContent>
                                <MudCardActions>
                                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mr-auto" Disabled="@(model == null)">Update</MudButton>
                                </MudCardActions>
                            </MudCard>
                        </MudItem>
                    </MudGrid>
                </EditForm>
            </div>
        </div>
    </div>
}

@code {
    
}
