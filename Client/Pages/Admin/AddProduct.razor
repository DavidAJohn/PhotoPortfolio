@page "/admin/products/add"
@layout AdminLayout

@using Microsoft.AspNetCore.Authorization
@using PhotoPortfolio.Client.Contracts
@using PhotoPortfolio.Shared.Entities
@using PhotoPortfolio.Shared.Models;

@inject IAdminService adminService
@inject NavigationManager navigationManager
@inject ISnackbar Snackbar

@attribute [Authorize]

<PageTitle>Photo Portfolio : Admin : Add Product</PageTitle>

@if (errorMessage != "")
{
    <div class="mx-2 animate-pulse">
        <div class="alert-box" role="alert">
            <span class="block sm:inline">@errorMessage</span>
        </div>
    </div>
}
else
{
    <div class="m-4 md:m-8">
        <div class="pb-4">
            <Breadcrumb BreadcrumbCrumbs="@BreadcrumbCrumbs" />
        </div>

        <div class="text-3xl mb-8">Add New Product</div>

        <div class="w-full lg:w-1/2">
            <div class="text-base mb-4">Adding a product makes it available to be associated with a photo or gallery.</div>
            <div class="text-base mb-4">There are several steps that need to be taken:</div>
            <div class="text-base mb-4">1. Visit <a href="https://www.prodigi.com/products/" target="_blank" class="text-blue-700 underline">https://www.prodigi.com/products/</a> to find a product to add</div>
            <div class="text-base mb-4">2. Download any images of the product you want to display to customers</div>
            <div class="text-base mb-4">3. Add the product details below:</div>

            <div class="text-base mb-4">
                <EditForm Model="@model" OnValidSubmit="CreateProduct">
                    <DataAnnotationsValidator />
                    <MudGrid>
                        <MudItem xs="16" sm="9">
                            <MudCard>
                                <MudCardContent>
                                    <MudTextField Label="Sku" @bind-Value="model.ProdigiSku" For="@(() => model.ProdigiSku)" />
                                    <MudTextField Label="Description" Class="mt-3" @bind-Value="model.ProdigiDescription" For="@(() => model.ProdigiDescription)" />
                                </MudCardContent>
                                <MudCardActions>
                                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mr-auto" Disabled="@(product != null)">Save</MudButton>
                                </MudCardActions>
                            </MudCard>
                        </MudItem>
                    </MudGrid>
                </EditForm>
            </div>

            @if (product is not null)
            {
                <div class="text-base">4. Upload the image assets:</div>
                <div class="text-base">
                    <PhotoUpload UploadType=ImageUploadType.Product Product=product ProductUpdate="ImageAssetsAdded" />
                </div>
            }
        </div>
    </div>
}

@code {
    private string errorMessage = "";
    private string productId = "";
    private Product product = null!;
    private Product model = new();

    private List<BreadcrumbCrumb> BreadcrumbCrumbs = new();

    protected override void OnInitialized()
    {
        BreadcrumbCrumbs.Add(new BreadcrumbCrumb { Id = 1, Name = "Products", Uri = "/admin/products", Enabled = true });
        BreadcrumbCrumbs.Add(new BreadcrumbCrumb { Id = 2, Name = "Add New Product", Uri = "", Enabled = false });
    }

    private async Task CreateProduct()
    {
        var productCreated = await adminService.AddProductAsync(model);

        if (productCreated is not null)
        {
            product = productCreated;
            Snackbar.Add($"This product has now been created", Severity.Success);
        }
        else
        {
            Snackbar.Add($"Sorry, there was a problem creating this product", Severity.Error);
        }
    }

    private async void ImageAssetsAdded(Product returnedProduct)
    {
        var productUpdated = await adminService.UpdateProductAsync(returnedProduct);

        if (productUpdated)
        {
            Console.WriteLine("Image assets were successfully added to the product");
        }
        else
        {
            Console.WriteLine("Image assets could NOT be added to the product");
        }
    }
}
