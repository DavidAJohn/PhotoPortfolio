@page "/admin/photos/edit/{Id}"
@layout AdminLayout

@using Microsoft.AspNetCore.Authorization
@using PhotoPortfolio.Client.Contracts

@inject IPhotoService photoService
@inject IAdminService adminService
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@inject IQuoteService quoteService
@inject IProductService productService

@attribute [Authorize]

<PageTitle>Photo Portfolio : Admin : Edit Photo</PageTitle>

@if (errorMessage != "")
{
    <div class="mx-2 animate-pulse">
        <div class="alert-box" role="alert">
            <span class="block sm:inline">@errorMessage</span>
        </div>
    </div>
}
else if (photo == null)
{
    <text>Loading photo...</text>
}
else
{
    <div class="m-4 md:m-8 ">
        <div class="pb-4">
            <Breadcrumb BreadcrumbCrumbs="@BreadcrumbCrumbs" />
        </div>

        <div class="text-3xl mb-8">Edit Photo</div>
    </div>
    <div class="my-16 flex flex-row">
        <div class="mx-4">
            <img src="@photo.Uri" class="w-full px-4 lg:w-auto lg:h-112 lg:px-0" id="photo-image" />
        </div>
        <div class="px-2 lg:px-0">
            <div class="text-xl lg:text-3xl font-bold mb-4" id="photo-title">@photo.Title</div>
            <div class="text-sm lg:text-base mb-4 pr-8 text-justify" id="photo-caption">@photo.Caption</div>
            @if (photo.Metadata is not null)
            {
                <div class="text-sm lg:text-base mb-2 text-justify" id="photo-dimensions">
                    Dimensions: @(photo.Metadata.Width)px x @(photo.Metadata.Height)px
                </div>
                <div class="text-sm lg:text-base mb-2 text-justify" id="photo-dimensions">
                    Taken: @photo.Metadata.DateTaken
                </div>
            }
        </div>
    </div>
    <div class="m-4 md:m-8 ">
        <div class="text-2xl mb-8">Products</div>
        <div class="my-4 flex">
            <MudButton OnClick="OpenAddProductDialog" Variant="Variant.Filled" Color="Color.Primary">
                Add A Product
            </MudButton>
        </div>
        @if (photo.Products is not null)
        {
            <div class="mt-8 grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 gap-10">
            @foreach (var product in photo.Products)
            {
                <div class="bg-white rounded-lg shadow-lg">
                    <div class="p-8 flex flex-col">
                        <div class="flex flex-row">
                            <div class="w-3/4">
                                <div class="text-sm mb-2 text-justify">
                                    Sku: @product.ProdigiSku
                                </div>
                                <div class="text-sm mb-2">
                                    Description: @product.CustomDescription
                                </div>
                                <div class="text-sm mb-2 text-justify">
                                    Markup (%): @product.MarkupPercentage
                                </div>
                            </div>
                            <div class="w-1/4">
                                @if (!string.IsNullOrEmpty(product.MockupImageUri))
                                {
                                    <div>
                                        <img src="@product.MockupImageUri" class="w-24" />
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="text-sm lg:text-base mt-4 flex space-x-2 justify-items-start">
                            <MudButton Variant="Variant.Filled"
                               StartIcon="@Icons.Material.Filled.EditNote"
                               Size="Size.Small"
                               Color="Color.Success"
                               @onclick="@(() => OpenEditProductDialog(product))"
                            >
                                Edit
                            </MudButton>
                            <MudButton 
                                Variant="Variant.Filled" 
                                StartIcon="@Icons.Material.Filled.DeleteForever" 
                                Size="Size.Small" 
                                Color="Color.Error"
                                @onclick="@(() => DeleteProduct(product))"
                            >
                                Delete
                            </MudButton>
                        </div>
                    </div>
                </div>
            }
            </div>
        }
        else
        {
            <div class="text-sm lg:text-base font-semibold mb-4 text-justify" id="photo-products-empty">
                There are currently no products associated with this image
            </div>
        }

        <MudDialog @bind-IsVisible="addDialogVisible" Options="dialogOptions">
            <TitleContent>
                <MudText Typo="Typo.h6">
                    <MudIcon Icon="@Icons.Material.Filled.AddToPhotos" Class="mr-3" /> Add A Product
                </MudText>
            </TitleContent>
            <DialogContent>
                <div class="p-2">
                    @if (products is not null)
                    {
                    <EditForm id="@AddProductFormId" Model="@model" OnValidSubmit="OnValidSubmit">
                        <DataAnnotationsValidator />
                        <Dropdown DropdownTitle="Select a Product:" DropdownItems="dropdownOptions" SelectedOption="SelectedOption" />
                        @if (selectedProduct is not null)
                        {
                            <div class="my-4 text-sm lg:text-base text-slate-800 font-semibold">
                                @selectedProduct.ProdigiSku
                            </div>
                        }
                        <MudText Class="mb-4">@model.ProdigiDescription</MudText>
                        <MudTextField Label="Custom Description" @bind-Value="model.CustomDescription" For="@(() => model.CustomDescription)" />
                        <MudTextField Label="Further Details" Class="mt-3" @bind-Value="model.FurtherDetails" For="@(() => model.FurtherDetails)" />
                        <MudTextField Label="Markup %" Class="mt-3" @bind-Value="model.MarkupPercentage" For="@(() => model.MarkupPercentage)" />
                        @if (selectedProduct.Id is not null)
                        {
                            if (addWholesalePrice != 0.0m)
                            {
                                <MudText Class="mt-4">Wholesale Price: £@addWholesalePrice.ToString("0.00")</MudText>
                            }
                            else
                            {
                                <MudSkeleton Class="mt-4" SkeletonType="SkeletonType.Rectangle" Width="200px" Height="33px" />
                            }
                            <MudText Class="mt-4">Price To Customer (exc. delivery): £@(((((decimal)model.MarkupPercentage / 100) + 1) * addWholesalePrice).ToString("0.00"))</MudText>
                        }
                    </EditForm>
                    }
                    else
                    {
                    <div class="text-sm lg:text-base font-semibold mb-4 text-justify" id="products-dialog-empty">
                        There are currently no products available to be added to this image
                    </div>
                    }
                </div>
            </DialogContent>
            <DialogActions>
                <MudButton Variant="Variant.Filled" Color="Color.Success" Disabled="!addFormIsValid" ButtonType="ButtonType.Submit" form="@AddProductFormId" Class="px-10">Save</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Close" Class="px-10">Close</MudButton>
            </DialogActions>
        </MudDialog>

        <MudDialog @bind-IsVisible="editDialogVisible" Options="dialogOptions">
            <TitleContent>
                <MudText Typo="Typo.h6">
                    <MudIcon Icon="@Icons.Material.Filled.EditNote" Class="mr-3" /> Edit Product
                </MudText>
            </TitleContent>
            <DialogContent>
                <div class="p-2">
                    <MudPaper Class="mx-2 my-2">
                        <MudText Class="mb-4">@editedProduct.ProdigiDescription</MudText>
                        <MudTextField Label="Custom Description" @bind-Value="@editedProduct.CustomDescription" />
                        <MudTextField Label="Markup Percentage (%)" @bind-Value="editedMarkupPercentage" />
                        @if (wholesalePrice == 0.0m)
                        {
                            <MudSkeleton Class="mt-4" SkeletonType="SkeletonType.Rectangle" Width="200px" Height="33px" />
                        }
                        else
                        {
                            <MudText Class="mt-4">Wholesale Price: £@wholesalePrice.ToString("0.00")</MudText>
                        }
                        <MudText Class="mt-4">Price To Customer (exc. delivery): £@(((((decimal)editedMarkupPercentage / 100) + 1) * wholesalePrice).ToString("0.00"))</MudText>
                    </MudPaper>
                </div>
            </DialogContent>
            <DialogActions>
                <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="@(() => EditProduct(editedProduct, editedMarkupPercentage))" form="@EditProductFormId" Class="px-10">Save</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Close" Class="px-10">Close</MudButton>
            </DialogActions>
        </MudDialog>
    </div>
}
