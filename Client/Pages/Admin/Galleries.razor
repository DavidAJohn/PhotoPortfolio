@page "/admin/galleries"
@layout AdminLayout

@using Microsoft.AspNetCore.Authorization
@using PhotoPortfolio.Client.Contracts
@using PhotoPortfolio.Shared.Entities

@inject IGalleryService galleryService
@inject IAdminService adminService
@inject ISnackbar Snackbar
@inject NavigationManager navigationManager

@attribute [Authorize]

<PageTitle>Photo Portfolio : Admin : Galleries</PageTitle>

@if (errorMessage != "")
{
    <div class="mx-2 animate-pulse">
        <div class="alert-box" role="alert">
            <span class="block sm:inline">@errorMessage</span>
        </div>
    </div>
}
else if (galleries == null)
{
    <text>Loading galleries...</text>
}
else
{
    <div class="m-4 md:m-8">
        <div class="text-3xl">Galleries</div>
        <div class="mt-8">
            <LinkButton LinkText="Add New Gallery" Uri="/admin/gallery" />
        </div>
        <div class="mt-10 grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-10">
        @foreach (Gallery gallery in galleries)
        {
            <div class="bg-white rounded-lg shadow-lg">
                <div class="group relative overflow-hidden hover:cursor-pointer rounded-t-lg" @onclick="@(() => Edit(gallery.Id))">
                <img class="object-cover group-hover:brightness-75 transition ease-in-out duration-700 group-hover:scale-105" src=@gallery.HeaderImage />
                    <div class="absolute invisible group-hover:!visible text-xl text-white top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 ">
                        Edit
                    </div>
                </div>
                <div class="p-6">
                    <h2 class="font-bold mb-4 text-2xl">
                        @gallery.Name
                    </h2>
                    <p class="my-2 truncate">@gallery.Description</p>
                </div>
                <div class="px-4 pb-2">
                    @if (gallery.Public)
                    {
                        <MudTooltip Delay="500" Duration="1000" Text="NOTE: galleries displayed in masonry grids, etc. must be public" Arrow="true" Placement="Placement.Bottom">
                            <MudChip Size="Size.Small" Icon="@Icons.Filled.Cancel" Color="Color.Error" Disabled="@gallery.Public">Private</MudChip>
                                <MudSwitch @bind-Checked="gallery.Public" 
                                    Color="Color.Success" 
                                    UnCheckedColor="Color.Error" 
                                    @onclick="@(() => UpdatePublicStatus(gallery))" />
                            <MudChip Size="Size.Small" Icon="@Icons.Filled.Person" Color="Color.Success" Class="-ml-6">Public</MudChip>
                        </MudTooltip>
                    }
                    @if (!gallery.Public)
                    {
                        <MudChip Size="Size.Small" Icon="@Icons.Filled.Cancel" Color="Color.Error">Private</MudChip>
                            <MudSwitch @bind-Checked="gallery.Public" 
                                Color="Color.Success" 
                                UnCheckedColor="Color.Error" 
                                @onclick="@(() => UpdatePublicStatus(gallery))" />
                        <MudChip Size="Size.Small" Icon="@Icons.Filled.Person" Color="Color.Success" Class="-ml-6" Disabled="!gallery.Public">Public</MudChip>
                    }
                </div>
                <div class="px-6 pb-6">
                    <MudTooltip Delay="500" Duration="1000" Text="NOTE: This only applies to 'public' gallery lists" Arrow="true" Placement="Placement.Bottom">
                        <MudSwitch @bind-Checked="gallery.DisplayInGalleryList" 
                            ThumbIcon="@(gallery.DisplayInGalleryList ? Icons.Material.Filled.Done : Icons.Material.Filled.Close)" 
                            ThumbIconColor="@(gallery.DisplayInGalleryList ? Color.Success : Color.Error)"
                            @onclick="@(() => UpdateDisplayStatus(gallery))"
                        >
                            <span class="text-sm font-sans font-semibold">Display in all public gallery lists?</span>
                        </MudSwitch>
                    </MudTooltip>
                </div>
            </div>
        }
        </div>
    </div>
}

@code {
    private List<Gallery> galleries = null!;
    private string errorMessage = "";

    protected override async Task OnInitializedAsync()
    {
        await GetGalleryList();
    }

    private async Task GetGalleryList()
    {
        try
        {
            galleries = await adminService.GetAllGalleriesAsync();
            errorMessage = "";
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            errorMessage = "Could not retrieve list of galleries";
        }
    }

    private async Task UpdatePublicStatus(Gallery gallery)
    {
        gallery.Public = !gallery.Public;

        var response = await adminService.UpdateGalleryAsync(gallery);

        // display a Snackbar to inform the user
        if (response)
        {
            var status = gallery.Public ? "Public" : "Private";

            Snackbar.Add($"The status of the '{gallery.Name}' gallery has been set to: {status}", Severity.Success);
        }
        else 
        {
            Snackbar.Add($"The status of the '{gallery.Name}' gallery could not be updated", Severity.Error);
        }
    }

    private async Task UpdateDisplayStatus(Gallery gallery)
    {
        gallery.DisplayInGalleryList = !gallery.DisplayInGalleryList;

        var response = await adminService.UpdateGalleryAsync(gallery);

        // display a Snackbar to inform the user
        if (response)
        {
            var status = gallery.DisplayInGalleryList ? "" : " NOT";

            Snackbar.Add($"The '{gallery.Name}' gallery will now{status} be shown in public gallery lists", Severity.Success);
        }
        else
        {
            Snackbar.Add($"The display status of the '{gallery.Name}' gallery could not be updated", Severity.Error);
        }
    }

    private void Edit(string id)
    {
        navigationManager.NavigateTo($"/admin/galleries/edit/{id}");
    }
}