@page "/checkout"

@using Humanizer;
@using PhotoPortfolio.Client.Contracts;
@using PhotoPortfolio.Client.Shared;
@using PhotoPortfolio.Shared.Entities;
@using PhotoPortfolio.Shared.Models;
@using PhotoPortfolio.Shared.Models.Prodigi.Quotes;

@inject IOrderService orderService;
@inject IQuoteService quoteService;
@inject IProductService productService;
@inject IPhotoService photoService;
@inject NavigationManager navigationManager;

<div class="h-auto">
    <div class="px-2 lg:container lg:max-w-6xl md:mt-8 mb-32 lg:mb-64">
        @if (basketItems != null)
        {
            @if (basketItems.Count > 0)
            {
                <div class="w-full p-4 rounded-md shadow-md bg-white focus:outline-none z-10">
                    
                    <div class="grid grid-cols-1 gap-4">
                        <div class="col-span-1">
                            <div class="text-lg text-center mb-8 md:text-xl lg:text-2xl font-bold">
                                Order Summary
                            </div>
                            <div class="p-4 mx-32 text-center">
                                @foreach (BasketItem item in basketItems)
                                {
                                    <div class="font-semibold text-sm mb-2 md:text-base flex items-center justify-center">
                                        @if (!string.IsNullOrEmpty(item.Product.ImageUri))
                                        {
                                            <div class="inline-block w-16 h-auto mr-4"><img src="@item.Product.ImageUri" /></div>
                                        }
                                        @if (string.IsNullOrEmpty(item.Product.ImageUri) && !string.IsNullOrEmpty(item.Product.MockupImageUri))
                                        {
                                            <div class="inline-block w-16 h-auto mr-4"><img src="@item.Product.MockupImageUri" /></div>
                                        }
                                        <div class="inline-block flex-shrink-0">
                                            <div class="mb-0">@item.Product.ImageTitle</div>
                                            <div class="font-medium text-sm">@item.Product.CustomDescription</div>
                                            @if (item.Product.Options != null)
                                            {
                                                foreach (var option in item.Product.Options)
                                                {
                                                    <div class="font-medium text-xs">@option.OptionLabel.Humanize(LetterCasing.Title) : @option.OptionName</div>
                                                }
                                            }
                                        </div>
                                        <div class="ml-4 font-bold">=&nbsp; £@item.Total.ToString("0.00")</div>
                                        <button type="button" class="inline-block ml-2 -mr-1 text-red-800" @onclick="() => DeleteItem(item)">
                                            <!-- heroicons: x-circle (solid) -->
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                                            </svg>
                                        </button>
                                    </div>
                                }
                            </div>
                            <div class="text-sm lg:text-base font-bold flex items-center justify-center mt-4 mb-8 text-slate-500" id="product-price">
                                <div class="mr-2">Shipping Method:</div>
                                @if (multipleDeliveryOptions)
                                {
                                    <div>
                                        <Dropdown DropdownTitle="@($"{selectedDeliveryOption} Delivery")" DropdownWidth="Dropdown.DropdownWidthOptions.Medium" DropdownItems="deliveryDropdownOptions" SelectedOption="SelectedDeliveryOption" />
                                    </div>
                                }
                                else
                                {
                                    <div class="text-base font-semibold">
                                        @(quotes.FirstOrDefault().Shipments.FirstOrDefault().Carrier.Service)  
                                    </div>
                                }
                                <div class="ml-4">
                                    <svg version="1.1" id="delivery-spinner" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                        class="h-5 w-5 @DeliverySpinnerVisible" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">
                                        <path fill="currentColor" d="M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z">
                                            <animateTransform attributeType="xml"
                                                attributeName="transform"
                                                type="rotate"
                                                from="0 25 25"
                                                to="360 25 25"
                                                dur="0.7s"
                                                repeatCount="indefinite" />
                                        </path>
                                    </svg>
                                </div>
                            </div>
                            @if (DeliverySpinnerVisible != "invisible")
                            {
                                <div class="my-2 px-4 flex justify-center text-sm md:text-base font-semibold">
                                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="150px" Height="33px" />
                                </div>
                                <div class="my-2 px-4 flex justify-center text-sm md:text-base font-semibold">
                                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="125px" Height="33px" />
                                </div>
                            }
                            else
                            {
                                <div class="my-2 px-4 text-center text-sm md:text-base font-semibold text-slate-500">
                                    Delivery:&nbsp; <span class="inline font-bold text-slate-500">£@((basketState.Basket.ShippingCost).ToString("0.00"))</span>
                                </div>
                                <div class="my-2 px-4 text-center text-sm md:text-base font-semibold">
                                    Total:&nbsp; <span class="inline font-bold">£@((basketState.Basket.BasketTotal).ToString("0.00"))</span>
                                </div>
                            }
                            <div class="mt-8 flex justify-center">
                                <button type="button" class="flex justify-center align-items-center py-2 px-4 my-3 bg-green-600 text-white rounded-sm text-sm hover:opacity-90" @onclick="() => PlaceOrder()">
                                    <svg version="1.1" id="order-spinner" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                        class="h-5 w-5 mr-2 @SubmitSpinnerHidden" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">
                                        <path fill="currentColor" d="M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z">
                                            <animateTransform attributeType="xml"
                                                  attributeName="transform"
                                                  type="rotate"
                                                  from="0 25 25"
                                                  to="360 25 25"
                                                  dur="0.7s"
                                                  repeatCount="indefinite" />
                                        </path>
                                    </svg>
                                    <div id="order-text" class="font-semibold">Place Order</div>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="container p-4 w-full rounded-md shadow-sm bg-white focus:outline-none z-10 " >
                    <div class="mb-4 text-lg text-center md:text-xl lg:text-2xl font-bold">
                        Order Summary
                    </div>
                    <div class="p-4 text-center" role="none">
                        <span class="font-semibold text-base">Your basket is currently empty</span>
                    </div>
                </div>
            }
        }
        @if (ShowErrors)
        {
            <div class="mx-2 text-center animate-pulse">
                <div class="alert-box" role="alert">
                    <span class="block sm:inline">@ErrorMessage</span>
                </div>
            </div>
        }
    </div>
</div>
